#version 120

uniform sampler2D texture;
uniform vec4 brightnessMult;
uniform vec2 resDirection;

vec4 encode(vec4 color)
{
    vec4 vEncoded;
    float maxComponent = max(max(color.r, color.g), color.b );
    float fExp = ceil( log2(maxComponent) );
    vEncoded = color / exp2(fExp);
    vEncoded.a = (fExp + 128) / 255;
    return vEncoded;
}

vec4 decode(vec4 rgbe)
{
    vec4 vDecoded;
    float fExp = rgbe.a * 255 - 128;
    vDecoded = rgbe * exp2(fExp);
    return vDecoded;
}

// TODO less step size if acceptable
vec4 blur9(sampler2D image, vec2 uv, vec2 resDir) {
    vec4 color = vec4(0.0);

    color += decode(texture2D(image, uv)) * 0.2023;
    color += decode(texture2D(image, uv + resDir * 0.5)) * 0.1791;
    color += decode(texture2D(image, uv - resDir * 0.5)) * 0.1791;
    color += decode(texture2D(image, uv + resDir * 1)) * 0.124;
    color += decode(texture2D(image, uv - resDir * 1)) * 0.124;
    color += decode(texture2D(image, uv + resDir * 1.5)) * 0.0672;
    color += decode(texture2D(image, uv - resDir * 1.5)) * 0.0672;
    color += decode(texture2D(image, uv + resDir * 2)) * 0.0285;
    color += decode(texture2D(image, uv - resDir * 2)) * 0.0285;
    return color;
}

void main()
{
    gl_FragColor = encode(blur9(texture, gl_TexCoord[0].st, resDirection) * brightnessMult);
}