#version 120

uniform sampler2D texture;
uniform float brScale;

vec4 encode(vec4 color)
{
    vec4 vEncoded;
    float maxComponent = max(max(color.r, color.g), color.b );
    float fExp = ceil( log2(maxComponent) );
    vEncoded = color / exp2(fExp);
    vEncoded.a = (fExp + 128) / 255;
    return vEncoded;
}

vec4 decode(vec4 rgbe)
{
    vec4 vDecoded;
    float fExp = rgbe.a * 255 - 128;
    vDecoded = rgbe * exp2(fExp);
    return vDecoded;
}

void main()
{
    vec4 fragColor = decode(texture2D(texture, gl_TexCoord[0].st));
    gl_FragColor = encode(fragColor / brScale);
}