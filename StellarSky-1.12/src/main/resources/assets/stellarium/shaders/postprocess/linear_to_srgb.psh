#version 120

uniform sampler2D texture;

vec4 encode(vec4 color)
{
    vec4 vEncoded;
    float maxComponent = max(max(color.r, color.g), color.b );
    float fExp = ceil( log2(maxComponent) );
    vEncoded = color / exp2(fExp);
    vEncoded.a = (fExp + 128) / 255;
    return vEncoded;
}

vec4 decode(vec4 rgbe)
{
    vec4 vDecoded;
    float fExp = rgbe.a * 255 - 128;
    vDecoded = rgbe * exp2(fExp);
    return vDecoded;
}
/*
float sRGB(float x) {
    // Complex calculation which is 'right'
    if (x <= 0.00031308)
        return 12.92 * x;
    else
        return 1.055 * pow(x, (1.0 / 2.4)) - 0.055;
    // Simpler Approximation
    //return pow(x, (1.0 / 2.2));
}
*/

// Equation which 'works'
vec3 sRGB(vec3 RGB) {
    vec3 S1 = sqrt(RGB);
    vec3 S2 = sqrt(S1);
    vec3 S3 = sqrt(S2);
    return 0.585122381 * S1 + 0.783140355 * S2 - 0.368262736 * S3;
}

vec4 sRGB(vec4 c) {
    return vec4(sRGB(c.xyz), c.w);
}

void main()
{
    vec4 linear = decode(texture2D(texture, gl_TexCoord[0].st));
    gl_FragColor = sRGB(linear);
}